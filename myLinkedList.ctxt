#BlueJ class context
comment0.params=
comment0.target=myLinkedList()
comment0.text=\r\n\ Default\ constructor\ for\ objects\ of\ class\ myLinkedList\r\n
comment1.params=element
comment1.target=void\ addFirst(java.lang.Object)
comment1.text=\r\n\ Adds\ element\ to\ the\ front\ of\ the\ LinkedList\r\n\ @param\ element\ the\ element\ added\ to\ the\ front\ of\ the\ list.\r\n
comment10.params=n
comment10.target=java.lang.Object\ get(int)
comment10.text=\r\n\ Method\ to\ get\ the\ data\ located\ at\ node\ \#n\r\n\ @param\ int\ n\ the\ desired\ node\r\n\ @return\ Object\ \r\n
comment11.params=n\ obj
comment11.target=void\ set(int,\ java.lang.Object)
comment11.text=\r\n\ Method\ to\ set\ the\ data\ located\ at\ node\ \#n\r\n\ @param\ int\ n\ the\ desired\ node\ Object\ obj\ the\ data\ to\ be\ set\r\n\ @return\ none\r\n
comment12.params=obj
comment12.target=boolean\ contains(java.lang.Object)
comment12.text=\r\n\ Sees\ whether\ an\ object\ is\ in\ the\ LL\r\n\ @param\ Object\ obj\ the\ object\ to\ check\ for\r\n\ @return\ boolean\ whether\ or\ not\ obj\ is\ in\ LL\r\n
comment2.params=element
comment2.target=void\ jankyAddFirst(java.lang.Object)
comment2.text=\r\n\ A\ purposefully\ bad\ method\ so\ we\ can\ work\ on\ our\ QA\ skills\r\n\ @param\ element\ the\ element\ to\ add\ to\ the\ front\ of\ the\ list\r\n\ @return\ none\r\n
comment3.params=
comment3.target=int\ size()
comment3.text=\r\n\ A\ size\ method\ to\ get\ the\ size\ of\ the\ linked\ list\r\n\ @param\ none\r\n\ @return\ int\ the\ size\ of\ the\ LL\r\n
comment4.params=
comment4.target=java.lang.Object\ getFirst()
comment4.text=\r\n\ Gets\ the\ first\ element\ in\ the\ LinkedList\r\n\ @param\ none\r\n\ @return\ Object\ the\ element\ at\ the\ front\ of\ the\ list\r\n
comment5.params=
comment5.target=java.lang.Object\ removeFirst()
comment5.text=\r\n\ Removes\ the\ first\ element\ in\ the\ LinkedList\r\n\ @param\ none\r\n\ @return\ Object\ the\ element\ at\ the\ beginning\ of\ the\ list\r\n
comment6.params=
comment6.target=ListIterator\ listIterator()
comment7.params=
comment7.target=void\ reverse()
comment8.params=
comment8.target=java.lang.String\ toString()
comment9.params=n
comment9.target=myLinkedList.Node\ getNode(int)
comment9.text=\r\n\ Helper\ method\ to\ follow\ n\ nodes\ in\ LL\r\n\ @pre\ LL\ must\ have\ at\ least\ n\ nodes\r\n\ @param\ int\ n\ the\ number\ of\ nodes\ to\ follow\r\n\ @return\ Node\ the\ node\ that\ is\ node\ number\ n\r\n
numComments=13
